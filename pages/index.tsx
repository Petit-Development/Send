import Head from 'next/head';
import { useState } from 'react';
import { Copy } from 'react-feather';

export default function Home() {
  const [selected, setSelected] = useState('upload');
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="bg-petit-purple w-screen h-screen">
          <div className="flex flex-col h-full">
            <Upload />
            <div className="flex justify-around">
              <TabButton
                onClick={() => setSelected('upload')}
                text={'Upload'}
                selected={selected === 'upload'}
              />
              <TabButton
                onClick={() => setSelected('download')}
                text={'Download'}
                selected={selected === 'download'}
              />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

interface TabButtonProps {
  text: string;
  onClick?: () => void;
  selected?: boolean;
}

const TabButton: React.FC<TabButtonProps> = ({
  text,
  selected = false,
  onClick,
}) => {
  return (
    <div
      onClick={onClick}
      className={`flex text-2xl place-items-center justify-center ${
        !selected ? 'bg-petit-light-purple' : 'bg-petit-purple'
      } w-full text-center h-20`}
    >
      {text}
    </div>
  );
};

const Upload = () => {
  const [text, setText] = useState('');
  const [key, setKey] = useState('');

  return (
    <div className="flex flex-col justify-center items-center content-center bg-arrow-up h-full w-full bg-center bg-no-repeat bg-contain">
      <div className="flex flex-col justify-center w-full items-center place-items-center">
        <div className="flex justify-center w-96 h-40 bg-white rounded-2xl shadow-xl">
          <textarea
            className=" p-3 border-transparent focus:outline-none w-full h-10/12 bg-transparent resize-none"
            placeholder="Enter Text to Upload..."
            onChange={(change) => setText(change.target.value)}
          />
        </div>

        <div className="flex mt-10 justify-start w-96 h-10 bg-white rounded-2xl shadow-xl">
          <input
            className="flex-none p-3 border-transparent focus:outline-none w-11/12 h-10/12 bg-transparent resize-none"
            placeholder="Enter Key..."
            onChange={(change) => setKey(change.target.value)}
          />
          <div
            onClick={() => navigator.clipboard.writeText(key)}
            className="flex items-center bg-petit-grey justify-center w-full text-center rounded-r-2xl"
          >
            <Copy size="21" />
          </div>
        </div>
        <Button text="Upload" onClick={() => console.log({ text, key })} />
      </div>
    </div>
  );
};

interface ButtonProps {
  text: string;
  onClick?: () => void;
}

const Button: React.FC<ButtonProps> = ({ text, onClick }) => {
  return (
    <div
      onClick={onClick}
      className="bg-petit-light-purple rounded-3xl px-7 py-3 mt-7 shadow-2xl hover:bg-petit-purple hover:shadow-none select-none"
    >
      {text}
    </div>
  );
};
