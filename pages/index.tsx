import Head from 'next/head';
import { useState } from 'react';
import { Copy } from 'react-feather';
import Upload from '../components/upload';

export default function Home() {
  const [selected, setSelected] = useState('upload');
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="bg-petit-purple w-screen h-screen">
          <div className="flex flex-col h-full">
            <div
              className={`h-full ${
                selected === 'download' ? 'hidden' : 'visible'
              }`}
            >
              <Upload />
            </div>
            <div
              className={`h-full ${
                selected === 'upload' ? 'hidden' : 'visible'
              }`}
            >
              <Upload />
            </div>
            <p className={`${selected === 'upload' ? 'hidden' : ''}`}>
              Working on it!
            </p>
            <div className="flex justify-around">
              <TabButton
                onClick={() => setSelected('upload')}
                text={'Upload'}
                selected={selected === 'upload'}
              />
              <TabButton
                onClick={() => setSelected('download')}
                text={'Download'}
                selected={selected === 'download'}
              />
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

interface TabButtonProps {
  text: string;
  onClick?: () => void;
  selected?: boolean;
}

const TabButton: React.FC<TabButtonProps> = ({
  text,
  selected = false,
  onClick,
}) => {
  return (
    <div
      onClick={onClick}
      className={`flex text-2xl place-items-center justify-center ${
        !selected ? 'bg-petit-light-purple' : 'bg-petit-purple'
      } shadow-2xl transition-all z-10 w-full text-center h-20`}
    >
      {text}
    </div>
  );
};


interface ButtonProps {
  text: string;
  onClick?: () => void;
}

const Button: React.FC<ButtonProps> = ({ text, onClick }) => {
  return (
    <div
      onClick={onClick}
      className="transition-all duration-75 bg-petit-light-purple rounded-3xl px-7 py-3 mt-7 shadow-2xl hover:bg-petit-purple hover:shadow-none select-none"
    >
      {text}
    </div>
  );
};
